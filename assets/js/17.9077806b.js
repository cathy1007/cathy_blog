(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{191:function(t,a,s){"use strict";s.r(a);var n=s(6),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"数据库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[t._v("#")]),t._v(" 数据库")]),t._v(" "),s("h3",{attrs:{id:"数据库简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据库简介"}},[t._v("#")]),t._v(" 数据库简介")]),t._v(" "),s("h4",{attrs:{id:"文档-document-、集合-collection-、数据库-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文档-document-、集合-collection-、数据库-database"}},[t._v("#")]),t._v(" 文档(document)、集合(collection)、数据库(database)")]),t._v(" "),s("h4",{attrs:{id:"和sql型数据库对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#和sql型数据库对比"}},[t._v("#")]),t._v(" 和sql型数据库对比")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("sql术语")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("mongodb术语")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("解释")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("database")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("database")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("数据库")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("table")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("collection")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("表/集合")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("row")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("document")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("记录/文档")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("column")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("field")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("字段/域")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("index")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("index")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("索引")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("table joins")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("/")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("连接，mongoDB不支持")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("primary key")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("primary key")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("主键，mongoDB中"),s("code",[t._v("_id")]),t._v("即为主键")])])])]),t._v(" "),s("h3",{attrs:{id:"常规curd操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常规curd操作"}},[t._v("#")]),t._v(" 常规CURD操作")]),t._v(" "),s("p",[t._v("具体api请参考"),s("a",{attrs:{href:"https://mongoosejs.com/docs/api/model.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("strong",[t._v("- 新增")])]),t._v(" "),s("p",[t._v("常用方法有：")]),t._v(" "),s("ol",[s("li",[t._v("Model.create()")]),t._v(" "),s("li",[t._v("_instance.save()")])]),t._v(" "),s("p",[s("strong",[t._v("- 查找")])]),t._v(" "),s("p",[t._v("如果不提供回调函数，所有这些方法都返回 Query 对象，它们都可以被再次修改（比如增加选项、键等），直到调用 exec 方法")]),t._v(" "),s("p",[t._v("常用的有：")]),t._v(" "),s("ol",[s("li",[t._v("Model.find(query, fields, options, function(err, docs){}):返回文档数组")]),t._v(" "),s("li",[t._v("Model.findById(obj._id,function(err, doc){})：返回单个文档")]),t._v(" "),s("li",[t._v("Model.findOne({ _id:'id'},function(err, doc){})： 返回单个文档")])]),t._v(" "),s("p",[t._v("另外还有："),s("code",[t._v("findByIdAndDelete")]),t._v("、 "),s("code",[t._v("findByIdAndRemove")]),t._v("、 "),s("code",[t._v("findByIdAndUpdate")]),t._v("、 "),s("code",[t._v("findOneAndDelete")]),t._v("、 "),s("code",[t._v("findOneAndRemove")]),t._v("、 "),s("code",[t._v("findOneAndReplace")]),t._v("、 "),s("code",[t._v("findOneAndUpdate")])]),t._v(" "),s("p",[s("strong",[t._v("- 修改")])]),t._v(" "),s("ol",[s("li",[t._v("Model.update()")]),t._v(" "),s("li",[t._v("Model.updateOne()")]),t._v(" "),s("li",[t._v("Model.updateMany()")])]),t._v(" "),s("p",[s("strong",[t._v("- 删除")])]),t._v(" "),s("ol",[s("li",[t._v("Model.deleteMany()")]),t._v(" "),s("li",[t._v("Model.deleteOne()")]),t._v(" "),s("li",[t._v("Model.remove()")])]),t._v(" "),s("h3",{attrs:{id:"高级用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级用法"}},[t._v("#")]),t._v(" 高级用法")]),t._v(" "),s("ol",[s("li",[t._v("Model.populate()：数据关联 参考："),s("a",{attrs:{href:"https://segmentfault.com/a/1190000002727265",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mongoose 之 Population 使用"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Model.aggregte()：聚合\n通过管道操作实现聚合。常用的管道有：\n"),s("ul",[s("li",[t._v("$project:修改输入文档结构，用来重命名、显示部分字段、创建计算结果、嵌套文档")]),t._v(" "),s("li",[t._v("$match:过滤数据，输出符合条件的文档,相当于find()、findOne()、$where")]),t._v(" "),s("li",[t._v("$limit 限制文档数")]),t._v(" "),s("li",[t._v("$skip 跳过指定文档,配合"),s("code",[t._v("$limit")]),t._v("一起用于分页")]),t._v(" "),s("li",[t._v("$sort 排序")]),t._v(" "),s("li",[t._v("group 文档分组，可以使用的"),s("a",{attrs:{href:"https://docs.mongodb.com/manual/reference/operator/aggregation/",target:"_blank",rel:"noopener noreferrer"}},[t._v("逻辑字段："),s("OutboundLink")],1),t._v(" "),s("ul",[s("li",[t._v("$sum:计算总和")]),t._v(" "),s("li",[t._v("$avg:计算平均值")]),t._v(" "),s("li",[t._v("$min:获取对应值的最小值")]),t._v(" "),s("li",[t._v("$max:获取对应值的最大值")]),t._v(" "),s("li",[t._v("$push:在结果文档中插入值到一个数组中")]),t._v(" "),s("li",[t._v("$addToSet：在结果文档中插入值到一个数组中，但不创建副本")]),t._v(" "),s("li",[t._v("$first  根据资源文档的排序获取第一个文档数据")]),t._v(" "),s("li",[t._v("$last  根据资源文档的排序获取最后一个文档数据")])])]),t._v(" "),s("li",[t._v("$lookup 关联查询,相当于关系数据库中的left outer join\n基本格式为："),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'book'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//关联的集合")]),t._v("\n localField"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cate_id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//本地id")]),t._v("\n foreignField"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'_id'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//被关联的集合字段，一般为_id,数据类型必须和localField一致")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'newName'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//新的数组名")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])]),t._v(" "),s("p",[t._v("举例："),s("br"),t._v("\n商品属性：_id,  createTime,  nowPriceL,  nowPriceH,  number"),s("br"),t._v("\n目标：统计每一天内店铺商品的最低价和最高价，平均最低价")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" Goods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("aggregate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       $match"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n         number"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$gte"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//匹配number>=100的记录")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        $project "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            day "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$substr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$add"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$createTime"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("28800000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//时区数据校正，8小时换算成毫秒数为8*60*60*1000=288000后分割成YYYY-MM-DD日期格式便于分组")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nowPriceL"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置原有nowPriceL为1，表示结果显示原有字段nowPriceL")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nowPriceH"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置原有nowPriceH为1，表示结果显示原有字段nowPriceH")]),t._v("\n            avgNowPriceL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$toDouble"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$nowPriceL"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把最低价转换为小数")]),t._v("\n            avgNowPriceH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$toDouble"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$nowPriceH"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//把最高价转换为小数")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dayNumber"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//每组内有多少个成员")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   \n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     $group"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n       _id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$day"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//按照$day进行分组（一组为1天） ")]),t._v("\n       nowPriceL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$min"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$nowPriceL"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查找组内最小的nowPriceL ")]),t._v("\n       nowPriceH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$max"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$nowPriceH"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//查找组内最大的nowPriceH  ")]),t._v("\n       avgNowPriceL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$avg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$avgNowPriceL"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//统计每一天内店铺商品的平均最低价")]),t._v("\n       avgNowPriceH"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$avg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$avgNowPriceH"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//统计每一天内店铺商品的平均最高价")]),t._v("\n       dayNumber"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("$sum"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("   \n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n     $sort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n       nowPriceL"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//执行完 $group，得到的结果集按照nowPriceL升序排列")]),t._v("\n     "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" goods")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//返回结果  ")]),t._v("\n   console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("goods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("执行完$match管道后，得到的查询结果会输入到$project管道，执行完$project管道，得到的结果格式为{day,nowPriceL,nowPriceH},把这个结果输入$group管道，$group管道执行完毕，输出的结果输入到$sort管道，$sort执行完毕，输出最终结果集")])])}),[],!1,null,null,null);a.default=e.exports}}]);